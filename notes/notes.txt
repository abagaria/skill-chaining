NOTE: too conservative nu for oc_svm will result in no classes

conda env export --no-builds > environment2.yml

Experience Format (s, a, r, s'):
    (
        x: 0.04563510852011676	y: 0.025069855877261793 has_key: False theta: 0.020345420899034905 xdot: 0.027840619382801225 ydot: -0.0870369329932777 thetadot: -0.08814207475220448 terminal: False,
        array([1., 0.36957714], dtype=float32),
        -1.0,
        x: 0.9728018368897211	y: 0.3982240908521795	has_key: False	theta: 0.3828711945348712	xdot: 0.027865134602680385ydot: -0.08702695899573652	thetadot: -0.08814207475220448	terminal: False
    )


# test
python3 simple_rl/agents/func_approx/dsc/SkillChainingAgentClass.py --env="maze" --experiment_name="sc_opt_pes_test1" --episodes=50 --steps=2000 --use_smdp_update=True --option_timeout=True --subgoal_reward=300. --buffer_len=100 --device="cpu" --num_subgoal_hits=3

# baseline
python3 simple_rl/agents/func_approx/dsc/SkillChainingAgentClass.py --env="maze" --experiment_name="sc_opt_pes_test" --episodes=2000 --steps=2000 --use_smdp_update=True --option_timeout=True --subgoal_reward=300. --buffer_len=20 --device="cpu" --num_subgoal_hits=3


	def train_one_class_svm(self):
		# print("-> (Option::train_one_class_svm): call")		# TODO: remove
		assert len(self.positive_examples) == self.num_subgoal_hits_required, "Expected init data to be a list of lists"
		positive_feature_matrix = self.construct_feature_matrix(self.positive_examples)
		# print("|-> Feature matrix ([X,y]): \n", positive_feature_matrix)		# TODO: remove

		# Smaller gamma -> influence of example reaches farther. Using scale leads to smaller gamma than auto.
		self.initiation_classifier = svm.OneClassSVM(kernel="rbf", nu=0.1, gamma="scale")
		self.initiation_classifier.fit(positive_feature_matrix)

{Class}::{Method}

SkillChainingAgentClass::skill_chaining(...)
  |- ...
  |- SkillChainingAgentClass::take_action(...)
    |- ...
	|- OptionClass::execute_option_in_mdp(...)
	  |- ...
	  |- OptionClass::refine_initiation_set_classifier(...)
	    |- ...
		|- OptionClass::train_initiation_set_classifier()
  |- ...
  |- OptionClass::train(...)
    |- ...
	|- OptionClass::train_initiation_set_classifier()